plugins {
	id 'fabric-loom' version '0.10-SNAPSHOT'
	id 'maven-publish'
}

sourceCompatibility = JavaVersion.VERSION_16
targetCompatibility = JavaVersion.VERSION_16

group = project.maven_group
archivesBaseName = project.archives_base_name
version = "mc" + project.minecraft_version + "-" + project.mod_version

sourceSets.main.java.srcDirs += 'java'
sourceSets.main.resources.srcDirs += 'resources'

repositories {
	maven { url "https://maven.shedaniel.me/" }
	maven { url "https://maven.terraformersmc.com/" }
}

dependencies {
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

	modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"

	modImplementation "com.terraformersmc:modmenu:${project.modmenu_version}"
	modApi("me.shedaniel.cloth:cloth-config-fabric:${project.cloth_version}") {
		exclude(group: "net.fabricmc.fabric-api")
	}
	include "me.shedaniel.cloth:cloth-config-fabric:${project.cloth_version}"

	modCompileOnly "me.shedaniel:RoughlyEnoughItems-fabric:6.0.306-alpha"
}

processResources {
	inputs.property "version", project.version

	filesMatching("fabric.mod.json") {
		expand "version": project.version
	}
}

tasks.withType(JavaCompile).configureEach {
	it.options.encoding = "UTF-8"
	it.options.release = 16
}

java {
	// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
	// if it is present.
	withSourcesJar()
}

task apiJar(type: Jar, dependsOn: classes) {
	archiveClassifier.set "api"

	from sourceSets.main.output
	include "squeek/appleskin/api/**"
}

jar {
	from("LICENSE") {
		rename { "${it}_${project.archivesBaseName}"}
	}
}

artifacts {
 	archives sourcesJar
 	archives apiJar
}

// configure the maven publication
publishing {
	publications {
		mavenJava(MavenPublication) {
			groupId = group
			artifactId = archivesBaseName

			// add all the jars that should be included when publishing to maven
			artifact(remapJar) {
				builtBy remapJar
			}
			artifact(sourcesJar) {
				builtBy remapSourcesJar
			}
			artifact(apiJar)
		}
	}

	repositories {
		maven {
			url = project.findProperty("maven.url") ?: System.getenv("MAVEN_URL")
			credentials {
				username=project.findProperty("maven.user") ?: System.getenv("MAVEN_USER")
				password=project.findProperty("maven.password") ?: System.getenv("MAVEN_PASSWORD")
			}
		}
	}
}
